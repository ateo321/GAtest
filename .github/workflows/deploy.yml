name: Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Run tests
      run: npm test

  deploy-railway:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Railway CLI
      run: npm install -g @railway/cli
      
    - name: Deploy to Railway
      run: |
        echo "üöÇ Deploying to Railway..."
        export RAILWAY_TOKEN="${{ secrets.RAILWAY_TOKEN }}"
        railway login
        railway up --detach
        echo "‚úÖ Deployment completed!"
        
    - name: Get deployment info
      run: |
        echo "üîó Getting deployment information..."
        railway status

  deploy-docker:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=semver,pattern={{version}}
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test, deploy-docker]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## üöÄ Release ${{ github.ref_name }}
          
          **Repository:** ${{ github.repository }}  
          **Commit:** ${{ github.sha }}  
          **Date:** ${{ github.event.head_commit.timestamp }}
          
          ## üì¶ What's New
          
          - Automated deployment to Railway
          - Docker image published to GitHub Container Registry
          - GitHub Actions CI/CD pipeline
          
          ## üê≥ Docker
          
          ```bash
          # Pull the image
          docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          
          # Run container
          docker run -p 3000:3000 ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          ```
        draft: false
        prerelease: false
